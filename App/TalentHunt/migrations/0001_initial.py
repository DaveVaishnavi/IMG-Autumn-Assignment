# Generated by Django 4.1 on 2022-10-08 07:50

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('branch', models.CharField(max_length=255)),
                ('stage', models.CharField(max_length=255)),
                ('enroll_no', models.IntegerField()),
                ('year_of_study', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('cgpa', models.IntegerField()),
                ('total_score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RecruitmentSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_season', models.IntegerField()),
                ('no_of_rounds', models.IntegerField()),
                ('season_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=255, null=True)),
                ('year_of_study', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('role', models.CharField(choices=[('Developer', 'Developer'), ('Designer', 'Designer')], max_length=255)),
                ('name', models.CharField(default='', max_length=255)),
                ('branch', models.CharField(max_length=255, null=True)),
                ('enroll_no', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_sections', models.IntegerField()),
                ('season', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.recruitmentseason')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_marks', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.test')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField()),
                ('scored_marks', models.IntegerField()),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.applicant')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.section')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('max_marks', models.IntegerField()),
                ('assignee', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.section')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField()),
                ('marks', models.IntegerField()),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Interviewing', 'Interviewing'), ('Disabled', 'Disabled'), ('Idle', 'Idle')], max_length=255)),
                ('type', models.CharField(choices=[('Tech Dev', 'Tech Dev'), ('Tech Design', 'Tech Design'), ('HR Tech', 'HR Tech'), ('HR Design', 'HR Design')], max_length=255)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.applicant')),
                ('member', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_of_interview', models.DateTimeField()),
                ('call_remarks', models.TextField()),
                ('call_status', models.TextField(choices=[('Called and Confirmed', 'Called and Confirmed'), ('Called but not confirmed', 'Called but not confirmed'), ('Not called', 'Not called')], max_length=255)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.applicant')),
                ('interview_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.interviewpanel')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.round')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.round'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.recruitmentseason'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_marks', models.IntegerField()),
                ('answer_text', models.TextField()),
                ('remarks', models.TextField()),
                ('check_status', models.CharField(choices=[('Checked', 'Checked'), ('Unchecked', 'Unchecked')], max_length=255)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.applicant')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TalentHunt.question')),
            ],
        ),
    ]
